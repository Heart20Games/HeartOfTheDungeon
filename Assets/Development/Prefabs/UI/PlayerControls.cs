//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.0
//     from Assets/Development/Prefabs/UI/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""GroundMovement"",
            ""id"": ""68936ce1-7dac-4e3a-afbc-8dc23e83038f"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5afb2a4c-38f9-42a6-95bb-f9788364c85c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DieTest"",
                    ""type"": ""Button"",
                    ""id"": ""434f2936-6ea5-4ebc-aed2-76351019f43a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""f20b9006-d9ce-40ef-bf16-fde5f04afb33"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cast Primary"",
                    ""type"": ""Button"",
                    ""id"": ""ab2ff5e6-76e1-4188-8b31-e550d4e66d1d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cast Secondary"",
                    ""type"": ""Button"",
                    ""id"": ""aa7655b0-1dc7-4e21-9541-def6bfd63dd6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch Primary"",
                    ""type"": ""Button"",
                    ""id"": ""9c8d0cd9-3328-4fd6-b860-3330f80a7959"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Switch Secondary"",
                    ""type"": ""Button"",
                    ""id"": ""0ca15d03-d446-4370-ae98-256ab25941ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Toggle Skill Wheel"",
                    ""type"": ""Button"",
                    ""id"": ""216f075d-ea50-4bc4-8bc2-de338f8b2575"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch Character Left"",
                    ""type"": ""Button"",
                    ""id"": ""9b4d422a-4563-4e56-9c2a-2675c39d78b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch Character Right"",
                    ""type"": ""Button"",
                    ""id"": ""c2b927cd-76e6-4070-878c-27e5f2a3d228"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch Character Center"",
                    ""type"": ""Button"",
                    ""id"": ""d6550c58-45d5-4fde-b826-b51adc9d2fe0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleFollowers"",
                    ""type"": ""Button"",
                    ""id"": ""b078f247-3f63-4992-bcfe-0202b328d762"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Test"",
                    ""type"": ""Button"",
                    ""id"": ""b7a22a2d-9eb5-4675-a18a-bd28587fe8fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bde91a51-f0b0-4f69-93df-953a75e9bcf7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cycle Character Left"",
                    ""type"": ""Button"",
                    ""id"": ""1fbf7a26-cc4a-444e-9128-e1a1de4db185"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cycle Character Right"",
                    ""type"": ""Button"",
                    ""id"": ""28d5642f-5d6c-4406-8eb3-63001598f40e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""e5e43ab4-6a8d-4021-8850-a2bb633d0218"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ab13f2c1-90c7-4447-b248-5769dc6089a0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""996b43f3-b7c5-439a-8215-790ea288a4c7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1cfa3d63-d9d3-4566-8de1-4e2a8a062ebb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""75fbe57e-722d-4021-b1ec-78fde27dcfd0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left JoyStick"",
                    ""id"": ""f4e1178b-dfdd-450a-b1e7-79b6bb75276a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""da726ce9-e5ff-453f-a3b8-4ea33920d94e"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ad88f92f-b134-4da1-9fee-717ea8d08679"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2f896057-ea70-432e-b91f-7230ec40ecfb"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""35b293fe-5866-4da2-b371-82224b4d66b4"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4575b443-be01-4a07-8c35-ebe69a5f87ee"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DieTest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b66dff0-341f-4c1c-85a0-e95816000acd"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b91392e3-38e7-490f-be7e-33d06be862e1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08bcc911-170f-4dae-8c3b-53e4d27ac362"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ede39a6-7910-46b6-9f40-62b46eca27e3"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b871c23-33c5-44f3-ba40-aa3b63a71194"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast Secondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51627623-c437-452c-a3ee-db1b730264c1"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast Secondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc1ecd1e-4a82-4102-978a-53d8b1c15505"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22aff08f-8c35-49a2-8e71-1dfd6df94817"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54c38d64-7f14-408a-ac73-5d06cd3ee310"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Secondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0918806a-9d28-4cc5-bf9b-2add6a8c88b8"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Secondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fee31364-f1c1-43d4-a416-a360fd573bc1"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Toggle Skill Wheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""429e9fc7-8c86-48e4-ad86-b57ce09450dc"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Character Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d30793cc-f603-4289-9ac8-73649f999556"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Character Center"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf71ce4a-8fc9-4ca3-bf99-12111b5081c1"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Character Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e645a03-cb6f-45a9-9cba-eb3ca02ba76e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Test"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d84240aa-b9af-4a6d-908f-32d3a41b629c"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6423447a-5a01-4921-b0bf-7e10cfa62c17"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""58b2e1bc-d351-43c5-8046-ec5584315c11"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7b679475-9381-4296-a569-1ee6ea3efae4"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""36c99ed9-8ab0-4ac2-bd2e-4b1f31419191"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e8287fb4-91cc-4b5d-be87-8e5f488a6b68"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cycle Character Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e9d5f66-f770-4f06-a982-e5150d1428ae"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cycle Character Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Dialogue"",
            ""id"": ""de396bac-c3a7-43f4-93f2-4d361a8bf6ef"",
            ""actions"": [
                {
                    ""name"": ""Continue"",
                    ""type"": ""Button"",
                    ""id"": ""053b44bb-f407-4d4d-a0a6-97ef694df359"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Change Selection"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c5a08cf9-d320-46c6-850c-fa21e327155a"",
                    ""expectedControlType"": ""Dpad"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""8a9196ac-13e1-4851-a4d9-3ba9334e90a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""82945459-0420-44b5-901d-f3bad80dd277"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Continue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4079a6ad-52f0-4c3e-a336-042decfa5886"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Continue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""01f86c26-0eeb-4a22-b898-87615aa199fd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5d9ccf04-5d12-4c7b-a24f-31755d279116"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a7ffc1af-92a0-4f7a-baaf-349b75752b29"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2724f3b1-4351-4d28-b9ea-ed0fdd88dc32"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""28713d0f-f21d-4af1-948b-d19f8c133d35"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""399a85d3-b3a2-47b3-96ff-8d82724a0116"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""71ae3f31-8825-4cd2-9e23-74d614863ba3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""77fce446-56a9-4040-8123-f2359179f728"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7f36d9b5-eea4-4ff7-952c-0a9f8a8c131f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8c641a79-01b2-4f0f-b552-6ebcf444aece"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f3b3f033-1e90-472f-b9c3-06b985a58f17"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""444c6a2f-c56f-42bf-85d6-6ede5a879ecc"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Selector"",
            ""id"": ""e035308a-d628-4d92-87a0-6d9f43ca2995"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4f1ac0f0-8bea-419e-bc15-874fa8bb6215"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Toggle Skill Wheel"",
                    ""type"": ""Button"",
                    ""id"": ""a49a1b34-29a8-4f19-8116-81bc2e0ef642"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""c604108f-2008-4423-afb4-aff394b61d80"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DeSelect"",
                    ""type"": ""Button"",
                    ""id"": ""611c6732-58bd-4edc-aedb-384f9493641b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""79830cb1-299c-4570-a5b6-c14c9425080c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e20c256c-d68c-417a-ad50-e121136bf15c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2a990db1-5535-416c-a31f-87d2d322fc4f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3783771e-562a-4fa2-94e7-db41848d82af"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5cf0c37e-9dbc-43ee-b7de-ddeb88d728e0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left JoyStick"",
                    ""id"": ""f09ee884-35df-47d1-93d8-2a2af18cc340"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6dc47d5e-fc2a-42f8-85be-b3d85ecb0784"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""75d2e3ba-586e-451a-b577-97fbf2ef99db"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""84dc7715-232c-4628-97eb-1b7e34c6efbc"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""58439aaf-2dd7-461a-96d5-4f28eecd4dec"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""43c083c6-1084-4071-bc65-bb248ecd5607"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Toggle Skill Wheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""908904ac-349a-4563-84a7-dbd01bad885e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e32a94f-ceac-4990-b806-2a8f03b27930"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DeSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GroundMovement
        m_GroundMovement = asset.FindActionMap("GroundMovement", throwIfNotFound: true);
        m_GroundMovement_Move = m_GroundMovement.FindAction("Move", throwIfNotFound: true);
        m_GroundMovement_DieTest = m_GroundMovement.FindAction("DieTest", throwIfNotFound: true);
        m_GroundMovement_Interact = m_GroundMovement.FindAction("Interact", throwIfNotFound: true);
        m_GroundMovement_CastPrimary = m_GroundMovement.FindAction("Cast Primary", throwIfNotFound: true);
        m_GroundMovement_CastSecondary = m_GroundMovement.FindAction("Cast Secondary", throwIfNotFound: true);
        m_GroundMovement_SwitchPrimary = m_GroundMovement.FindAction("Switch Primary", throwIfNotFound: true);
        m_GroundMovement_SwitchSecondary = m_GroundMovement.FindAction("Switch Secondary", throwIfNotFound: true);
        m_GroundMovement_ToggleSkillWheel = m_GroundMovement.FindAction("Toggle Skill Wheel", throwIfNotFound: true);
        m_GroundMovement_SwitchCharacterLeft = m_GroundMovement.FindAction("Switch Character Left", throwIfNotFound: true);
        m_GroundMovement_SwitchCharacterRight = m_GroundMovement.FindAction("Switch Character Right", throwIfNotFound: true);
        m_GroundMovement_SwitchCharacterCenter = m_GroundMovement.FindAction("Switch Character Center", throwIfNotFound: true);
        m_GroundMovement_ToggleFollowers = m_GroundMovement.FindAction("ToggleFollowers", throwIfNotFound: true);
        m_GroundMovement_Test = m_GroundMovement.FindAction("Test", throwIfNotFound: true);
        m_GroundMovement_Aim = m_GroundMovement.FindAction("Aim", throwIfNotFound: true);
        m_GroundMovement_CycleCharacterLeft = m_GroundMovement.FindAction("Cycle Character Left", throwIfNotFound: true);
        m_GroundMovement_CycleCharacterRight = m_GroundMovement.FindAction("Cycle Character Right", throwIfNotFound: true);
        // Dialogue
        m_Dialogue = asset.FindActionMap("Dialogue", throwIfNotFound: true);
        m_Dialogue_Continue = m_Dialogue.FindAction("Continue", throwIfNotFound: true);
        m_Dialogue_ChangeSelection = m_Dialogue.FindAction("Change Selection", throwIfNotFound: true);
        m_Dialogue_Back = m_Dialogue.FindAction("Back", throwIfNotFound: true);
        // Selector
        m_Selector = asset.FindActionMap("Selector", throwIfNotFound: true);
        m_Selector_Move = m_Selector.FindAction("Move", throwIfNotFound: true);
        m_Selector_ToggleSkillWheel = m_Selector.FindAction("Toggle Skill Wheel", throwIfNotFound: true);
        m_Selector_Select = m_Selector.FindAction("Select", throwIfNotFound: true);
        m_Selector_DeSelect = m_Selector.FindAction("DeSelect", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GroundMovement
    private readonly InputActionMap m_GroundMovement;
    private List<IGroundMovementActions> m_GroundMovementActionsCallbackInterfaces = new List<IGroundMovementActions>();
    private readonly InputAction m_GroundMovement_Move;
    private readonly InputAction m_GroundMovement_DieTest;
    private readonly InputAction m_GroundMovement_Interact;
    private readonly InputAction m_GroundMovement_CastPrimary;
    private readonly InputAction m_GroundMovement_CastSecondary;
    private readonly InputAction m_GroundMovement_SwitchPrimary;
    private readonly InputAction m_GroundMovement_SwitchSecondary;
    private readonly InputAction m_GroundMovement_ToggleSkillWheel;
    private readonly InputAction m_GroundMovement_SwitchCharacterLeft;
    private readonly InputAction m_GroundMovement_SwitchCharacterRight;
    private readonly InputAction m_GroundMovement_SwitchCharacterCenter;
    private readonly InputAction m_GroundMovement_ToggleFollowers;
    private readonly InputAction m_GroundMovement_Test;
    private readonly InputAction m_GroundMovement_Aim;
    private readonly InputAction m_GroundMovement_CycleCharacterLeft;
    private readonly InputAction m_GroundMovement_CycleCharacterRight;
    public struct GroundMovementActions
    {
        private @PlayerControls m_Wrapper;
        public GroundMovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_GroundMovement_Move;
        public InputAction @DieTest => m_Wrapper.m_GroundMovement_DieTest;
        public InputAction @Interact => m_Wrapper.m_GroundMovement_Interact;
        public InputAction @CastPrimary => m_Wrapper.m_GroundMovement_CastPrimary;
        public InputAction @CastSecondary => m_Wrapper.m_GroundMovement_CastSecondary;
        public InputAction @SwitchPrimary => m_Wrapper.m_GroundMovement_SwitchPrimary;
        public InputAction @SwitchSecondary => m_Wrapper.m_GroundMovement_SwitchSecondary;
        public InputAction @ToggleSkillWheel => m_Wrapper.m_GroundMovement_ToggleSkillWheel;
        public InputAction @SwitchCharacterLeft => m_Wrapper.m_GroundMovement_SwitchCharacterLeft;
        public InputAction @SwitchCharacterRight => m_Wrapper.m_GroundMovement_SwitchCharacterRight;
        public InputAction @SwitchCharacterCenter => m_Wrapper.m_GroundMovement_SwitchCharacterCenter;
        public InputAction @ToggleFollowers => m_Wrapper.m_GroundMovement_ToggleFollowers;
        public InputAction @Test => m_Wrapper.m_GroundMovement_Test;
        public InputAction @Aim => m_Wrapper.m_GroundMovement_Aim;
        public InputAction @CycleCharacterLeft => m_Wrapper.m_GroundMovement_CycleCharacterLeft;
        public InputAction @CycleCharacterRight => m_Wrapper.m_GroundMovement_CycleCharacterRight;
        public InputActionMap Get() { return m_Wrapper.m_GroundMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GroundMovementActions set) { return set.Get(); }
        public void AddCallbacks(IGroundMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_GroundMovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GroundMovementActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @DieTest.started += instance.OnDieTest;
            @DieTest.performed += instance.OnDieTest;
            @DieTest.canceled += instance.OnDieTest;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @CastPrimary.started += instance.OnCastPrimary;
            @CastPrimary.performed += instance.OnCastPrimary;
            @CastPrimary.canceled += instance.OnCastPrimary;
            @CastSecondary.started += instance.OnCastSecondary;
            @CastSecondary.performed += instance.OnCastSecondary;
            @CastSecondary.canceled += instance.OnCastSecondary;
            @SwitchPrimary.started += instance.OnSwitchPrimary;
            @SwitchPrimary.performed += instance.OnSwitchPrimary;
            @SwitchPrimary.canceled += instance.OnSwitchPrimary;
            @SwitchSecondary.started += instance.OnSwitchSecondary;
            @SwitchSecondary.performed += instance.OnSwitchSecondary;
            @SwitchSecondary.canceled += instance.OnSwitchSecondary;
            @ToggleSkillWheel.started += instance.OnToggleSkillWheel;
            @ToggleSkillWheel.performed += instance.OnToggleSkillWheel;
            @ToggleSkillWheel.canceled += instance.OnToggleSkillWheel;
            @SwitchCharacterLeft.started += instance.OnSwitchCharacterLeft;
            @SwitchCharacterLeft.performed += instance.OnSwitchCharacterLeft;
            @SwitchCharacterLeft.canceled += instance.OnSwitchCharacterLeft;
            @SwitchCharacterRight.started += instance.OnSwitchCharacterRight;
            @SwitchCharacterRight.performed += instance.OnSwitchCharacterRight;
            @SwitchCharacterRight.canceled += instance.OnSwitchCharacterRight;
            @SwitchCharacterCenter.started += instance.OnSwitchCharacterCenter;
            @SwitchCharacterCenter.performed += instance.OnSwitchCharacterCenter;
            @SwitchCharacterCenter.canceled += instance.OnSwitchCharacterCenter;
            @ToggleFollowers.started += instance.OnToggleFollowers;
            @ToggleFollowers.performed += instance.OnToggleFollowers;
            @ToggleFollowers.canceled += instance.OnToggleFollowers;
            @Test.started += instance.OnTest;
            @Test.performed += instance.OnTest;
            @Test.canceled += instance.OnTest;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @CycleCharacterLeft.started += instance.OnCycleCharacterLeft;
            @CycleCharacterLeft.performed += instance.OnCycleCharacterLeft;
            @CycleCharacterLeft.canceled += instance.OnCycleCharacterLeft;
            @CycleCharacterRight.started += instance.OnCycleCharacterRight;
            @CycleCharacterRight.performed += instance.OnCycleCharacterRight;
            @CycleCharacterRight.canceled += instance.OnCycleCharacterRight;
        }

        private void UnregisterCallbacks(IGroundMovementActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @DieTest.started -= instance.OnDieTest;
            @DieTest.performed -= instance.OnDieTest;
            @DieTest.canceled -= instance.OnDieTest;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @CastPrimary.started -= instance.OnCastPrimary;
            @CastPrimary.performed -= instance.OnCastPrimary;
            @CastPrimary.canceled -= instance.OnCastPrimary;
            @CastSecondary.started -= instance.OnCastSecondary;
            @CastSecondary.performed -= instance.OnCastSecondary;
            @CastSecondary.canceled -= instance.OnCastSecondary;
            @SwitchPrimary.started -= instance.OnSwitchPrimary;
            @SwitchPrimary.performed -= instance.OnSwitchPrimary;
            @SwitchPrimary.canceled -= instance.OnSwitchPrimary;
            @SwitchSecondary.started -= instance.OnSwitchSecondary;
            @SwitchSecondary.performed -= instance.OnSwitchSecondary;
            @SwitchSecondary.canceled -= instance.OnSwitchSecondary;
            @ToggleSkillWheel.started -= instance.OnToggleSkillWheel;
            @ToggleSkillWheel.performed -= instance.OnToggleSkillWheel;
            @ToggleSkillWheel.canceled -= instance.OnToggleSkillWheel;
            @SwitchCharacterLeft.started -= instance.OnSwitchCharacterLeft;
            @SwitchCharacterLeft.performed -= instance.OnSwitchCharacterLeft;
            @SwitchCharacterLeft.canceled -= instance.OnSwitchCharacterLeft;
            @SwitchCharacterRight.started -= instance.OnSwitchCharacterRight;
            @SwitchCharacterRight.performed -= instance.OnSwitchCharacterRight;
            @SwitchCharacterRight.canceled -= instance.OnSwitchCharacterRight;
            @SwitchCharacterCenter.started -= instance.OnSwitchCharacterCenter;
            @SwitchCharacterCenter.performed -= instance.OnSwitchCharacterCenter;
            @SwitchCharacterCenter.canceled -= instance.OnSwitchCharacterCenter;
            @ToggleFollowers.started -= instance.OnToggleFollowers;
            @ToggleFollowers.performed -= instance.OnToggleFollowers;
            @ToggleFollowers.canceled -= instance.OnToggleFollowers;
            @Test.started -= instance.OnTest;
            @Test.performed -= instance.OnTest;
            @Test.canceled -= instance.OnTest;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @CycleCharacterLeft.started -= instance.OnCycleCharacterLeft;
            @CycleCharacterLeft.performed -= instance.OnCycleCharacterLeft;
            @CycleCharacterLeft.canceled -= instance.OnCycleCharacterLeft;
            @CycleCharacterRight.started -= instance.OnCycleCharacterRight;
            @CycleCharacterRight.performed -= instance.OnCycleCharacterRight;
            @CycleCharacterRight.canceled -= instance.OnCycleCharacterRight;
        }

        public void RemoveCallbacks(IGroundMovementActions instance)
        {
            if (m_Wrapper.m_GroundMovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGroundMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_GroundMovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GroundMovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GroundMovementActions @GroundMovement => new GroundMovementActions(this);

    // Dialogue
    private readonly InputActionMap m_Dialogue;
    private List<IDialogueActions> m_DialogueActionsCallbackInterfaces = new List<IDialogueActions>();
    private readonly InputAction m_Dialogue_Continue;
    private readonly InputAction m_Dialogue_ChangeSelection;
    private readonly InputAction m_Dialogue_Back;
    public struct DialogueActions
    {
        private @PlayerControls m_Wrapper;
        public DialogueActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Continue => m_Wrapper.m_Dialogue_Continue;
        public InputAction @ChangeSelection => m_Wrapper.m_Dialogue_ChangeSelection;
        public InputAction @Back => m_Wrapper.m_Dialogue_Back;
        public InputActionMap Get() { return m_Wrapper.m_Dialogue; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialogueActions set) { return set.Get(); }
        public void AddCallbacks(IDialogueActions instance)
        {
            if (instance == null || m_Wrapper.m_DialogueActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DialogueActionsCallbackInterfaces.Add(instance);
            @Continue.started += instance.OnContinue;
            @Continue.performed += instance.OnContinue;
            @Continue.canceled += instance.OnContinue;
            @ChangeSelection.started += instance.OnChangeSelection;
            @ChangeSelection.performed += instance.OnChangeSelection;
            @ChangeSelection.canceled += instance.OnChangeSelection;
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
        }

        private void UnregisterCallbacks(IDialogueActions instance)
        {
            @Continue.started -= instance.OnContinue;
            @Continue.performed -= instance.OnContinue;
            @Continue.canceled -= instance.OnContinue;
            @ChangeSelection.started -= instance.OnChangeSelection;
            @ChangeSelection.performed -= instance.OnChangeSelection;
            @ChangeSelection.canceled -= instance.OnChangeSelection;
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
        }

        public void RemoveCallbacks(IDialogueActions instance)
        {
            if (m_Wrapper.m_DialogueActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDialogueActions instance)
        {
            foreach (var item in m_Wrapper.m_DialogueActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DialogueActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DialogueActions @Dialogue => new DialogueActions(this);

    // Selector
    private readonly InputActionMap m_Selector;
    private List<ISelectorActions> m_SelectorActionsCallbackInterfaces = new List<ISelectorActions>();
    private readonly InputAction m_Selector_Move;
    private readonly InputAction m_Selector_ToggleSkillWheel;
    private readonly InputAction m_Selector_Select;
    private readonly InputAction m_Selector_DeSelect;
    public struct SelectorActions
    {
        private @PlayerControls m_Wrapper;
        public SelectorActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Selector_Move;
        public InputAction @ToggleSkillWheel => m_Wrapper.m_Selector_ToggleSkillWheel;
        public InputAction @Select => m_Wrapper.m_Selector_Select;
        public InputAction @DeSelect => m_Wrapper.m_Selector_DeSelect;
        public InputActionMap Get() { return m_Wrapper.m_Selector; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SelectorActions set) { return set.Get(); }
        public void AddCallbacks(ISelectorActions instance)
        {
            if (instance == null || m_Wrapper.m_SelectorActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SelectorActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @ToggleSkillWheel.started += instance.OnToggleSkillWheel;
            @ToggleSkillWheel.performed += instance.OnToggleSkillWheel;
            @ToggleSkillWheel.canceled += instance.OnToggleSkillWheel;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @DeSelect.started += instance.OnDeSelect;
            @DeSelect.performed += instance.OnDeSelect;
            @DeSelect.canceled += instance.OnDeSelect;
        }

        private void UnregisterCallbacks(ISelectorActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @ToggleSkillWheel.started -= instance.OnToggleSkillWheel;
            @ToggleSkillWheel.performed -= instance.OnToggleSkillWheel;
            @ToggleSkillWheel.canceled -= instance.OnToggleSkillWheel;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @DeSelect.started -= instance.OnDeSelect;
            @DeSelect.performed -= instance.OnDeSelect;
            @DeSelect.canceled -= instance.OnDeSelect;
        }

        public void RemoveCallbacks(ISelectorActions instance)
        {
            if (m_Wrapper.m_SelectorActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISelectorActions instance)
        {
            foreach (var item in m_Wrapper.m_SelectorActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SelectorActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SelectorActions @Selector => new SelectorActions(this);
    public interface IGroundMovementActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnDieTest(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnCastPrimary(InputAction.CallbackContext context);
        void OnCastSecondary(InputAction.CallbackContext context);
        void OnSwitchPrimary(InputAction.CallbackContext context);
        void OnSwitchSecondary(InputAction.CallbackContext context);
        void OnToggleSkillWheel(InputAction.CallbackContext context);
        void OnSwitchCharacterLeft(InputAction.CallbackContext context);
        void OnSwitchCharacterRight(InputAction.CallbackContext context);
        void OnSwitchCharacterCenter(InputAction.CallbackContext context);
        void OnToggleFollowers(InputAction.CallbackContext context);
        void OnTest(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnCycleCharacterLeft(InputAction.CallbackContext context);
        void OnCycleCharacterRight(InputAction.CallbackContext context);
    }
    public interface IDialogueActions
    {
        void OnContinue(InputAction.CallbackContext context);
        void OnChangeSelection(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
    }
    public interface ISelectorActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnToggleSkillWheel(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnDeSelect(InputAction.CallbackContext context);
    }
}
